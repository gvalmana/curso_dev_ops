name: GValmana FastAPI demo

on:
  push:
    branches:
      - master
      - dev

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: |
          pip3 install -r requirements.txt
      
      - name: unittest
        run: |
          pytest test/test.py
      
      - name: docker build
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/curso-devs-fastapi-demo:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}          
      - name: docker push
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/curso-devs-fastapi-demo:${{ github.sha }}
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@v1.0.0
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/curso-devs-fastapi-demo:${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "Download new version"
            docker pull $DOCKER_IMAGE
            echo "Stop current version"      
            sleep 1
            API=$(docker ps -q -f name=api)
            if [! -z $API]
            then
              docker stop $API
              docker rm $API
            fi
              docker run -d --name api -p 80:8080 $DOCKER_IMAGE
      - name: Check Service
        env: 
          ENDPOINT: ${{ secrets.ENDPOINT }}
        run: |
          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" ${$ENDPOINT})
          if [${RESPONSE} -ne "200"]
          then
            echo "Service unresponsive"
            exit 1
          fi
            echo "Success!"